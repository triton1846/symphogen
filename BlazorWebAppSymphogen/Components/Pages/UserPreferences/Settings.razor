@page "/settings"
@using BlazorWebAppSymphogen.Components.Pages.UserPreferences
@inject IUserPreferences UserPreferences

<PageTitle>Settings</PageTitle>

<MudText Typo="Typo.h3" Class="mb-4">Settings</MudText>

@if (!UserPreferences.IsInitialized)
{
    <MudOverlay DarkBackground>
        <MudProgressCircular Color="Color.Primary" Size="Size.Medium" Indeterminate="true" />
    </MudOverlay>
}
else
{
    <MudGrid>

        <MudItem xs="12" sm="12" md="12" lg="9">
            <MudText Typo="Typo.body1" Class="mb-4">
                Adjust the application settings to match your preferences.
                Configure data usage, environment settings, and automation options to enhance your experience.
                Tailor the behavior of the application to suit your specific needs and requirements.
            </MudText>
        </MudItem>

        <MudItem xs="12" />

        <MudItem xs="12">
            <MudText Typo="Typo.h4">General Settings</MudText>
        </MudItem>

        <MudItem xs="_cardXs" sm="_cardSm" md="_cardMd" lg="_cardLg">
            <MudCard Outlined="true">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Which data should be used?</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        @if (UserPreferences.MimerEnvironment == MimerEnvironment.TestData)
                        {
                            <MudIcon Icon="@Icons.Material.Filled.CloudOff"
                                     Color="Color.Warning"
                                     Class="mr-3 mt-3"
                                     Size="Size.Medium" />
                        }
                        else
                        {
                            <MudIconButton Icon="@Icons.Material.Filled.CloudDone"
                                           Color="Color.Success"
                                           Size="Size.Medium" />
                        }
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent>
                    <MudText>Use test data or real data.</MudText>
                    <MudText Typo="Typo.body2">Test data is pseudo random generated data.</MudText>
                </MudCardContent>
                <MudCardActions>
                    <MudRadioGroup T="MimerEnvironment"
                                   Value="UserPreferences.MimerEnvironment"
                                   ValueChanged="async val => await UserPreferences.SetAsync(nameof(UserPreferences.MimerEnvironment), val)">
                        <MudRadio Value="MimerEnvironment.TestData">Test Data</MudRadio>
                        <MudRadio Value="MimerEnvironment.SB1">SB1</MudRadio>
                        <MudRadio Value="MimerEnvironment.QA">QA</MudRadio>
                    </MudRadioGroup>
                </MudCardActions>
            </MudCard>
        </MudItem>

        <MudItem xs="_cardXs" sm="_cardSm" md="_cardMd" lg="_cardLg">
            <BooleanCard BodyText="This setting is useful for maintaining a clean dataset. It will automatically remove any data that does not meet the validation criteria when opening edit dialogs. Changes will be cancelled upon cancellation in dialog."
                         Description="This enables the automatic removal of invalid data."
                         DisabledText="Invalid data not removed"
                         EnabledText="Remove invalid data automatically"
                         Icon="@Icons.Material.Filled.DeleteForever"
                         InvertValue="true"
                         Title="Remove invalid data automatically?"
                         Value="UserPreferences.RemoveInvalidDataAutomatically"
                         ValueChanged="async val => await UserPreferences.SetAsync(nameof(UserPreferences.RemoveInvalidDataAutomatically), val)" />
        </MudItem>

        <MudItem xs="12">
            <MudText Typo="Typo.h4">Settings for Test Data Usage</MudText>
        </MudItem>

        <MudItem xs="12" sm="12" md="8" lg="6">
            <MudAlert Severity="Severity.Info" Variant="Variant.Filled" Class="mb-4">
                Note: These settings are only applicable if <code>environment</code> is set to <code>Test Data</code>.
            </MudAlert>
        </MudItem>

        <MudItem xs="12" />

        <MudItem xs="_cardXs" sm="_cardSm" md="_cardMd" lg="_cardLg">
            <SliderCard CurrentValue="UserPreferences.FetchUsersDelay"
                        CurrentValueChanged="async val => await UserPreferences.SetAsync(nameof(UserPreferences.FetchUsersDelay), val)"
                        Description="Delay for fetching user data from the server."
                        Disabled="@(UserPreferences.MimerEnvironment != MimerEnvironment.TestData)"
                        FormattedValue="@FormatTimeSpan(UserPreferences.FetchUsersDelay)"
                        Title="Delay for fetching user data?" />
        </MudItem>

        <MudItem xs="_cardXs" sm="_cardSm" md="_cardMd" lg="_cardLg">
            <SliderCard CurrentValue="UserPreferences.FetchTeamsDelay"
                        CurrentValueChanged="async val => await UserPreferences.SetAsync(nameof(UserPreferences.FetchTeamsDelay), val)"
                        Description="Delay for fetching team data from the server."
                        Disabled="@(UserPreferences.MimerEnvironment != MimerEnvironment.TestData)"
                        FormattedValue="@FormatTimeSpan(UserPreferences.FetchTeamsDelay)"
                        Title="Delay for fetching team data?" />
        </MudItem>

        <MudItem xs="_cardXs" sm="_cardSm" md="_cardMd" lg="_cardLg">
            <SliderCard CurrentValue="UserPreferences.FetchWorkflowConfigurationsDelay"
                        CurrentValueChanged="async val => await UserPreferences.SetAsync(nameof(UserPreferences.FetchWorkflowConfigurationsDelay), val)"
                        Description="Delay for fetching workflow configuration data from the server."
                        Disabled="@(UserPreferences.MimerEnvironment != MimerEnvironment.TestData)"
                        FormattedValue="@FormatTimeSpan(UserPreferences.FetchWorkflowConfigurationsDelay)"
                        Title="Delay for fetching workflow configuration data?" />
        </MudItem>

        <MudItem xs="_cardXs" sm="_cardSm" md="_cardMd" lg="_cardLg">
            <MudCard Outlined="true">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Number of users to create?</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudIconButton Icon="@Icons.Material.Filled.People"
                                       Disabled="@(UserPreferences.MimerEnvironment != MimerEnvironment.TestData)"
                                       Color="Color.Success" />
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent>
                    <MudText>The number of users to create when using test data.</MudText>
                    <MudText Typo="Typo.body2">
                        This is useful for testing purposes, allowing you to simulate a larger dataset.
                        Note: This only works if the <code>UseTestData</code> is set to <code>true</code>.
                    </MudText>
                </MudCardContent>
                <MudCardActions Class="mx-3">
                    <MudSlider Color="Color.Primary"
                               Disabled="@(UserPreferences.MimerEnvironment != MimerEnvironment.TestData)"
                               Max="300"
                               Min="10"
                               Step="10"
                               T="int"
                               Value="@UserPreferences.TestDataNumberOfUsers"
                               ValueChanged="async val => await UserPreferences.SetAsync(nameof(UserPreferences.TestDataNumberOfUsers), val)"
                               ValueLabel="true">
                        @FormatUsersCount(UserPreferences.TestDataNumberOfUsers)
                    </MudSlider>
                </MudCardActions>
            </MudCard>
        </MudItem>

        <MudItem xs="_cardXs" sm="_cardSm" md="_cardMd" lg="_cardLg">
            <BooleanCard Description="This enables the creation of unknown users when using test data."
                         Disabled="@(UserPreferences.MimerEnvironment != MimerEnvironment.TestData)"
                         DisabledText="No unknown users"
                         EnabledText="Create unknown users"
                         Icon="@Icons.Material.Filled.PersonOff"
                         Title="Create unknown users?"
                         Value="UserPreferences.TestDataCreateUnknownUsersAsTeamMembers"
                         ValueChanged="async val => await UserPreferences.SetAsync(nameof(UserPreferences.TestDataCreateUnknownUsersAsTeamMembers), val)" />
        </MudItem>

        <MudItem xs="_cardXs" sm="_cardSm" md="_cardMd" lg="_cardLg">
            <BooleanCard Description="This enables the creation of duplicate team memberships for users when using test data."
                         Disabled="@(UserPreferences.MimerEnvironment != MimerEnvironment.TestData)"
                         DisabledText="No duplicates"
                         EnabledText="Create duplicate memberships"
                         Icon="@Icons.Material.Filled.GroupAdd"
                         Title="Create duplicate team memberships?"
                         Value="UserPreferences.TestDataCreateDuplicateTeamMembershipsForUsers"
                         ValueChanged="async val => await UserPreferences.SetAsync(nameof(UserPreferences.TestDataCreateDuplicateTeamMembershipsForUsers), val)" />
        </MudItem>

        <MudItem xs="_cardXs" sm="_cardSm" md="_cardMd" lg="_cardLg">
            <BooleanCard Description="This enables the creation of unknown super users when using test data."
                         Disabled="@(UserPreferences.MimerEnvironment != MimerEnvironment.TestData)"
                         DisabledText="No unknown super users"
                         EnabledText="Create unknown super users"
                         Icon="@Icons.Material.Filled.PersonOff"
                         Title="Create unknown super users?"
                         Value="UserPreferences.TestDataCreateUnknownSuperUsersAsTeamMembers"
                         ValueChanged="async val => await UserPreferences.SetAsync(nameof(UserPreferences.TestDataCreateUnknownSuperUsersAsTeamMembers), val)" />
        </MudItem>

        <MudItem xs="_cardXs" sm="_cardSm" md="_cardMd" lg="_cardLg">
            <BooleanCard Description="This enables the creation of duplicate team memberships for super users when using test data."
                         Disabled="@(UserPreferences.MimerEnvironment != MimerEnvironment.TestData)"
                         DisabledText="No duplicates"
                         EnabledText="Create duplicate memberships"
                         Icon="@Icons.Material.Filled.GroupAdd"
                         Title="Create duplicate team memberships for super users?"
                         Value="UserPreferences.TestDataCreateDuplicateTeamMembershipsForSuperUsers"
                         ValueChanged="async val => await UserPreferences.SetAsync(nameof(UserPreferences.TestDataCreateDuplicateTeamMembershipsForSuperUsers), val)" />
        </MudItem>

        <MudItem xs="_cardXs" sm="_cardSm" md="_cardMd" lg="_cardLg">
            <BooleanCard Description="This enables the creation of unknown teams when using test data."
                         Disabled="@(UserPreferences.MimerEnvironment != MimerEnvironment.TestData)"
                         DisabledText="No unknown teams"
                         EnabledText="Create unknown teams"
                         Icon="@Icons.Material.Filled.GroupOff"
                         Title="Create unknown teams?"
                         Value="UserPreferences.TestDataCreateUnknownTeams"
                         ValueChanged="async val => await UserPreferences.SetAsync(nameof(UserPreferences.TestDataCreateUnknownTeams), val)" />
        </MudItem>

        <MudItem xs="_cardXs" sm="_cardSm" md="_cardMd" lg="_cardLg">
            <BooleanCard Description="This enables the creation of duplicate teams when using test data."
                         Disabled="@(UserPreferences.MimerEnvironment != MimerEnvironment.TestData)"
                         DisabledText="No duplicates"
                         EnabledText="Create duplicate teams"
                         Icon="@Icons.Material.Filled.Diversity3"
                         Title="Create duplicate teams?"
                         Value="UserPreferences.TestDataCreateDuplicateTeams"
                         ValueChanged="async val => await UserPreferences.SetAsync(nameof(UserPreferences.TestDataCreateDuplicateTeams), val)" />
        </MudItem>

    </MudGrid>
}

@code {
    private TimeSpan _defaultTimeSpan = TimeSpan.FromMilliseconds(2000);
    private int _cardXs = 12;
    private int _cardSm = 12;
    private int _cardMd = 6;
    private int _cardLg = 3;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // Ensure user preferences are initialized
        // This is necessary to handle if user browses to this page directly
        if (!UserPreferences.IsInitialized)
        {
            await UserPreferences.InitializeAsync();
            StateHasChanged(); // Refresh the UI after initialization
        }
    }

    private string FormatTimeSpan(TimeSpan ts)
    {
        return $"{ts.TotalMilliseconds:F0} milliseconds";
    }

    private string FormatUsersCount(int count)
    {
        return $"{count} user{(count != 1 ? "s" : string.Empty)}";
    }
}
